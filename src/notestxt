 const original = {
    value: 0
  };
  const countReducer = (state = original, action) => {
    if (action.type === "plus") {
      return state.value + 1000;
    } else if (action.type === "minus") {
      return state.value - 1000;
    }

    return state;
  };

  const action = (text) => {
    return {
      type: text
    };
  };
  ///////////////////car   info
  /////////////////////////////////
  const carInfo = createSlice({
    name: "carSlice",
    initialState: {
      year: 2020,
      price: 20000,
      carName: "mercedez"
    },
    reducers: {
      deleteCarName: (state, action) => {
        state.carName = action;
      },
      changePrice: (state, price) => {
        state.price = price;
      }
    }
  });
  /////////////////////////////////////////////
  ///COMPANY  SLICE ;
  /////////////////
  /////////////change  name  reudcer  second  one
  const user = {
    name: "alecander",
    age: 28,
    job: "data   scientist"
  };
  const NameReducer = (state = user, action) => {
    if (action.type === "uppercase") {
      return { ...state, name: "Sasha Ten" };
    }

    return state;
  };

  const store = configureStore({
    reducer: {
      counter: countReducer,
      changeName: NameReducer,
      cars: carInfo.reducer
    }
  });
  const { deleteCarName, changePrice } = carInfo.actions;
  //  store.dispatch(carInfo.actions.deleteCarName("volvo   X3"));
  store.dispatch(changePrice(25));
  store.dispatch(deleteCarName("nexia"));
  console.log(store.getState());




  ///////////////
  THIS IS   HOW TO USE  SLICE PROPERLY
  
const   carInfo   =  createSlice({
  name  : "car_information",
  initialState:   {
    title  : "ferrari",
    price :  "20000$",
    production_year   :   2002,
  },
  reducers   : {
    changeName :  (state ,  action)=>{
      state.title   =    action
        },
     changeYear:   (state ,   action)=>{
       state.production_year  =    action
     }   ,
    
  }

})

const   {changeName ,    changeYear} =   carInfo.actions
const  store   =   configureStore({
  reducer   :   carInfo.reducer
})
store.dispatch(changeName("matiz"))
store.dispatch(changeYear(2021))
console.log(store.getState());

/////////////////////////////////////////

redux   tutorial    number  3 
//////////////////////////////////////////




in  total   it is  just  the   new  leveel   of  working   with the   state 
for   expamle you  can  fetch the  data  from  the  server and then 
just with  useeffect  and the  usestate   update  the initial  state
and pass it to the slice

















