//////////////
LOCAL  STATE   UPDATE   WITH   INPUT 
/////////////////////
  const [count, setCount] = useState(0);
  const [desiredNumber, setDesiredNumber] = useState(3);
  const createNumber = (e) => {
    e.preventDefault();

    setDesiredNumber(parseInt(e.target.value));
  };
  return (
    <div className="App">
      <h1>{count}</h1>
      <h2
        onClick={() => {
          setCount(count + 1);
        }}
      >
        +
      </h2>
      <h2
        onClick={() => {
          setCount(count - 1);
        }}
      >
        +
      </h2>
      <h2
        onClick={() => {
          setCount(count + desiredNumber);
        }}
      >
        + number : {desiredNumber}
      </h2>
      <input onChange={createNumber} />














/////////////
THIS   IS  HOW  DESTRUCTURING  WORKS 
////////////
const   user  =  {
  name:   "sasha" , 
  job  :   "data  analyst",
  age: "28",
  
}

let   newUser  =    {...user ,job : "web  dev"}

console.log(newUser);   




//////////////////////////////////////
REDUCER   FUNCTION RULES 
/////////////////////////////////////



/////////////////////
VERY   BASIC  REDUCER/////////
////////////////////

const   original =    {
  value : 0
}

const  reducer=(state , action)=>{
  if(action.type==="plus"){
    return {...state ,    value:  state.value+100}
  }
  return   state
}

const   action=  {
  type:   "plus"
}

console.log(reducer(original ,   action));
console.log(original);


/////////////////
///////////
SELECT   AND THE  DISPATCH
/////////////////////////


 const original = {
    value: 0,
    job: "software  engineer"
  };

  const theReducer = (state = original, action) => {
    if (action.type === "plus") {
      return { ...state, value: state.value + 100 };
    } else if (action.type === "changeJob") {
      return { ...state, job: "web developer" };
    }
    return state;
  };

  const action = {
    type: "plus"
  };

  const store = configureStore({
    reducer: theReducer
  });

  store.dispatch({ type: "plus" });
  store.dispatch({ type: "changeJob" });

  //console.log(store.getState());

  ////////  the  selectors

  const selectValue = (state) => state.value;
  const selectJob = (state) => state.job;
  console.log(selectValue(store.getState()));
  console.log(selectJob(store.getState()));



